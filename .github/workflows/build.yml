name: Build

on: 
  push:
    branches: [main, dev]
    tags: ['*']
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 
      uses: actions/setup-java@v2
      with:
        java-version: '16'
        distribution: 'adopt'
    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
    # Before building the protocol, the required protobuf plugins need to be installed.
    - name: Npm Install Protocol
      uses: bahmutov/npm-install@v1.6.0
      with:
        working-directory: 'protocol'
    # The protocol is build before other java packages, as they depend on the website.
    - name: Build with Gradle
      run: ./gradlew :protocol:generateProto :protocol:generateJavascriptPackage
    # The website has to be build after the buildJavascriptPackage task has been run.
    - name: Npm Install Website
      run: npm install --legacy-peer-deps
      working-directory: website
    # Builds the actual website for production
    - name: Build Website
      run: CI='' npm run build-all
      working-directory: website
    # Builds the backend (will include the websites generated code in the apps classpath)
    - name: Build Server
      run: ./gradlew build copyDependencies
    # Login to Docker Registry
    - name: Docker Login
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_TOKEN }}
    # Build the image and push it to the registry
    - name: Create Server Docker Meta
      id: docker_server_meta
      uses: crazy-max/ghaction-docker-meta@v2
      with:
        images: ehenoma/jsheets
        tags: |
          type=raw,value=latest,enable=${{ endsWith(GitHub.ref, 'main') }}
          type=ref,event=tag
        flavor: |
          latest=false
    - name: Build Server
      uses: docker/build-push-action@v2
      with:
        context: .
        file: server/deploy/Dockerfile
        push: true
        tags: ${{ steps.docker_server_meta.outputs.tags }}
        labels: ${{ steps.docker_server_meta.outputs.labels }}
    - name: Create Runtime Docker Meta
      id: docker_runtime_meta
      uses: crazy-max/ghaction-docker-meta@v2
      with:
        images: ehenoma/jsheets-runtime
        tags: |
          type=raw,value=latest,enable=${{ endsWith(GitHub.ref, 'main') }}
          type=ref,event=tag
        flavor: |
          latest=false
    - name: Build Runtime
      uses: docker/build-push-action@v2
      with:
        context: .
        file: runtime/deploy/Dockerfile
        push: true
        tags: ${{ steps.docker_runtime_meta.outputs.tags }}
        labels: ${{ steps.docker_runtime_meta.outputs.labels }}
